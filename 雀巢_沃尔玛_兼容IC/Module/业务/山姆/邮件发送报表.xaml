<Activity mc:Ignorable="sap sap2010 sads" x:Class="邮件发送报表" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:ecaac="clr-namespace:Encoo.CodeTool.Activity.Activities.Collection;assembly=Encoo.CodeTool.Activity" xmlns:ecaac1="clr-namespace:Encoo.CodeTool.Activity.Activities.CSharp;assembly=Encoo.CodeTool.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="curCustomerName" Type="InArgument(x:String)" />
    <x:Property Name="etoMailReceiver" Type="InArgument(x:String)" />
    <x:Property Name="cleanExceptionOrderMailReceiver" Type="InArgument(x:String)" />
    <x:Property Name="分仓明细MailReceiver" Type="InArgument(x:String)" />
    <x:Property Name="散威化订单附件" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="报表文件字典" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <this:邮件发送报表.散威化订单附件>
    <InArgument x:TypeArguments="scg:List(x:String)">
      <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_311">new List&lt;string&gt;{}</mca:CSharpValue>
    </InArgument>
  </this:邮件发送报表.散威化订单附件>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>808,971</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>邮件发送报表_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.CSharp</x:String>
      <x:String>System.IO</x:String>
      <x:String>BotTime.DataBase.Activity</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>Encootech.ActivityCommon.EncooCommonActivity</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
      <x:String>Encootech.AutomationActivity.WebAction</x:String>
      <x:String>Encoo.DataType</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.Tool</x:String>
      <x:String>Encootech.AutomationActivity</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>BotTime.DataTableActivity.Activities</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.Collection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Text</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>BotTime.DataBase.Activity</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>ActivityCommon</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>AutomationActivity</AssemblyReference>
      <AssemblyReference>Encoo.DataType</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>BotTime.DataTableActivity</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="邮件发送报表" sap:VirtualizedContainerService.HintSize="768,891" sap2010:WorkflowViewState.IdRef="Flowchart_7">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="邮件正文模板无数据" />
      <Variable x:TypeArguments="x:String" Name="邮件正文模板有数据" />
      <Variable x:TypeArguments="x:String" Name="邮件标题模板" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="eto附件">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">new List&lt;string&gt;{}</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="cleanException附件">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">new List&lt;string&gt;{}</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">80,48</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,50.5 310,92.5</av:PointCollection>
        <x:Double x:Key="Height">854.64</x:Double>
        <x:Double x:Key="Width">754.5</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">148.5,92.5</av:Point>
          <av:Size x:Key="ShapeSize">323,55</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,147.5 310,192.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - 邮件标题" sap:VirtualizedContainerService.HintSize="323,55" sap2010:WorkflowViewState.IdRef="Assign_19" IsIgnore="False">
        <bfa:Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">邮件标题模板</mca:CSharpReference>
          </OutArgument>
        </bfa:Assign.To>
        <bfa:Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">string.Format("雀巢【{0}】(订单类型)", curCustomerName)</mca:CSharpValue>
          </InArgument>
        </bfa:Assign.Value>
      </bfa:Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">148.5,192.5</av:Point>
              <av:Size x:Key="ShapeSize">323,57</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,249.5 310,291.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - 邮件正文模板无数据" sap:VirtualizedContainerService.HintSize="323,57" sap2010:WorkflowViewState.IdRef="Assign_20" IsIgnore="False">
            <bfa:Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">邮件正文模板无数据</mca:CSharpReference>
              </OutArgument>
            </bfa:Assign.To>
            <bfa:Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253" xml:space="preserve">string.Format(@"Dear All，&lt;br/&gt;

本时段【{0}】无新增(订单类型)，请知悉，谢谢。&lt;br/&gt; RPA机器人", curCustomerName)</mca:CSharpValue>
              </InArgument>
            </bfa:Assign.Value>
          </bfa:Assign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">148.5,291.5</av:Point>
                  <av:Size x:Key="ShapeSize">323,57</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">310,348.5 310,388.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - 邮件正文模板有数据" sap:VirtualizedContainerService.HintSize="323,57" sap2010:WorkflowViewState.IdRef="Assign_21" IsIgnore="False">
                <bfa:Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">邮件正文模板有数据</mca:CSharpReference>
                  </OutArgument>
                </bfa:Assign.To>
                <bfa:Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255" xml:space="preserve">String.Format(@"Dear All，&lt;br/&gt;
附件为本时段【{0}】(订单类型)，请参协助处理，谢谢。&lt;br/&gt; RPA机器人", curCustomerName)</mca:CSharpValue>
                  </InArgument>
                </bfa:Assign.Value>
              </bfa:Assign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">210,388.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,53</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">310,441.5 310,491.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <bfa:Retry ActivityName="重试" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="重试 - 发送山姆EX2O邮件" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="Retry_1" IsIgnore="False">
                    <bfa:Retry.RetryCount>
                      <InArgument x:TypeArguments="x:Int32">
                        <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_136" Value="2" />
                      </InArgument>
                    </bfa:Retry.RetryCount>
                    <bfa:Retry.RetryTimeSpan>
                      <InArgument x:TypeArguments="x:TimeSpan">
                        <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_137" />
                      </InArgument>
                    </bfa:Retry.RetryTimeSpan>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <bfa:Retry.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_138" Value="True" />
                      </InArgument>
                    </bfa:Retry.Condition>
                    <bfa:Retry.Body>
                      <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If 山姆或者山姆水的ex2o 文件存在）" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="If_24" IsIgnore="False">
                        <bfa:If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_318">报表文件字典.ContainsKey("山姆EX2OFile") || 报表文件字典.ContainsKey("山姆水单EX2OFile")</mca:CSharpValue>
                          </InArgument>
                        </bfa:If.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <bfa:If.Then>
                          <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="471,963" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If - 山姆EX2OFile）" sap:VirtualizedContainerService.HintSize="449,279" sap2010:WorkflowViewState.IdRef="If_27" IsIgnore="False">
                              <bfa:If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_334">报表文件字典.ContainsKey("山姆EX2OFile")</mca:CSharpValue>
                                </InArgument>
                              </bfa:If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <bfa:If.Then>
                                <ecaac:AddToCollectionActivity ActivityName="添加对象" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加对象 - 山姆EX2OFile" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollectionActivity_8">
                                  <ecaac:AddToCollectionActivity.Collection>
                                    <InOutArgument x:TypeArguments="scg:List(x:String)">
                                      <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">eto附件</mca:CSharpReference>
                                    </InOutArgument>
                                  </ecaac:AddToCollectionActivity.Collection>
                                  <ecaac:AddToCollectionActivity.Item>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">报表文件字典["山姆EX2OFile"]</mca:CSharpValue>
                                    </InArgument>
                                  </ecaac:AddToCollectionActivity.Item>
                                </ecaac:AddToCollectionActivity>
                              </bfa:If.Then>
                            </bfa:If>
                            <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If - 山姆水单EX2OFile）" sap:VirtualizedContainerService.HintSize="449,279" sap2010:WorkflowViewState.IdRef="If_28" IsIgnore="False">
                              <bfa:If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335">报表文件字典.ContainsKey("山姆水单EX2OFile")</mca:CSharpValue>
                                </InArgument>
                              </bfa:If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <bfa:If.Then>
                                <ecaac:AddToCollectionActivity ActivityName="添加对象" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加对象 - 山姆水单EX2OFile" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollectionActivity_9">
                                  <ecaac:AddToCollectionActivity.Collection>
                                    <InOutArgument x:TypeArguments="scg:List(x:String)">
                                      <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">eto附件</mca:CSharpReference>
                                    </InOutArgument>
                                  </ecaac:AddToCollectionActivity.Collection>
                                  <ecaac:AddToCollectionActivity.Item>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">报表文件字典["山姆水单EX2OFile"]</mca:CSharpValue>
                                    </InArgument>
                                  </ecaac:AddToCollectionActivity.Item>
                                </ecaac:AddToCollectionActivity>
                              </bfa:If.Then>
                            </bfa:If>
                            <ecaac1:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码 - 散威化附件去重添加到ETO附件中" sap:VirtualizedContainerService.HintSize="449,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_2">
                              <ecaac1:InvokeCSharpCodeActivity.CodeFilePath>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_149">.code\CSharp\执行CSharp代码-散威化去重.cs</Literal>
                                </InArgument>
                              </ecaac1:InvokeCSharpCodeActivity.CodeFilePath>
                            </ecaac1:InvokeCSharpCodeActivity>
                            <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - ex2o有数据" sap:VirtualizedContainerService.HintSize="449,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_38" IsIgnore="False">
                              <bfa:InvokeWorkflow.Arguments>
                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件">
                                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">eto附件</mca:CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">(邮件正文模板有数据.Replace("(订单类型)", "excel to order list")).ToString()</mca:CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">(邮件标题模板.Replace("(订单类型)", "Excel to order list")).ToString()</mca:CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">(etoMailReceiver).ToString()</mca:CSharpValue>
                                </InArgument>
                              </bfa:InvokeWorkflow.Arguments>
                              <bfa:InvokeWorkflow.WorkflowPath>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_150">Module\通知\发送邮件.xaml</Literal>
                                </InArgument>
                              </bfa:InvokeWorkflow.WorkflowPath>
                            </bfa:InvokeWorkflow>
                          </Sequence>
                        </bfa:If.Then>
                        <bfa:If.Else>
                          <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - ex2o无数据" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_34" IsIgnore="False">
                            <bfa:InvokeWorkflow.Arguments>
                              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件" />
                              <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_321">(邮件正文模板无数据.Replace("(订单类型)", "excel to order")).ToString()</mca:CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">(邮件标题模板.Replace("(订单类型)", "Excel to order list")).ToString()</mca:CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">(etoMailReceiver).ToString()</mca:CSharpValue>
                              </InArgument>
                            </bfa:InvokeWorkflow.Arguments>
                            <bfa:InvokeWorkflow.WorkflowPath>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_145">Module\通知\发送邮件.xaml</Literal>
                              </InArgument>
                            </bfa:InvokeWorkflow.WorkflowPath>
                          </bfa:InvokeWorkflow>
                        </bfa:If.Else>
                      </bfa:If>
                    </bfa:Retry.Body>
                  </bfa:Retry>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">210,491.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,53</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">310,544.5 310,594.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <bfa:Retry ActivityName="重试" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="重试 - 山姆CLean + Exception" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="Retry_2" IsIgnore="False">
                        <bfa:Retry.RetryCount>
                          <InArgument x:TypeArguments="x:Int32">
                            <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_139" Value="1" />
                          </InArgument>
                        </bfa:Retry.RetryCount>
                        <bfa:Retry.RetryTimeSpan>
                          <InArgument x:TypeArguments="x:TimeSpan">
                            <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_140" />
                          </InArgument>
                        </bfa:Retry.RetryTimeSpan>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <bfa:Retry.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_141" Value="True" />
                          </InArgument>
                        </bfa:Retry.Condition>
                        <bfa:Retry.Body>
                          <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If Clean Order文件存在）" sap:VirtualizedContainerService.HintSize="489,1127" sap2010:WorkflowViewState.IdRef="If_25" IsIgnore="False">
                            <bfa:If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_319">报表文件字典.ContainsKey("山姆CleanExceptionFile") || 报表文件字典.ContainsKey("山姆水单CleanExceptionFile")</mca:CSharpValue>
                              </InArgument>
                            </bfa:If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <bfa:If.Then>
                              <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="471,942" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If - 山姆CleanExceptionFile）" sap:VirtualizedContainerService.HintSize="449,321" sap2010:WorkflowViewState.IdRef="If_29" IsIgnore="False">
                                  <bfa:If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">报表文件字典.ContainsKey("山姆CleanExceptionFile")</mca:CSharpValue>
                                    </InArgument>
                                  </bfa:If.Condition>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <bfa:If.Then>
                                    <ecaac:AddToCollectionActivity ActivityName="添加对象" sap2010:Annotation.AnnotationText="报表文件字典[&quot;山姆CleanExceptionFile&quot;]" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加对象 - 山姆CleanExceptionFile" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="AddToCollectionActivity_10">
                                      <ecaac:AddToCollectionActivity.Collection>
                                        <InOutArgument x:TypeArguments="scg:List(x:String)">
                                          <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">cleanException附件</mca:CSharpReference>
                                        </InOutArgument>
                                      </ecaac:AddToCollectionActivity.Collection>
                                      <ecaac:AddToCollectionActivity.Item>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">报表文件字典["山姆CleanExceptionFile"]</mca:CSharpValue>
                                        </InArgument>
                                      </ecaac:AddToCollectionActivity.Item>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ecaac:AddToCollectionActivity>
                                  </bfa:If.Then>
                                </bfa:If>
                                <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If - 山姆水单CleanExceptionFile）" sap:VirtualizedContainerService.HintSize="449,321" sap2010:WorkflowViewState.IdRef="If_30" IsIgnore="False">
                                  <bfa:If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_337">报表文件字典.ContainsKey("山姆水单CleanExceptionFile")</mca:CSharpValue>
                                    </InArgument>
                                  </bfa:If.Condition>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <bfa:If.Then>
                                    <ecaac:AddToCollectionActivity ActivityName="添加对象" sap2010:Annotation.AnnotationText="报表文件字典[&quot;山姆水单EX2OFile&quot;]" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="添加对象 - 山姆水单CleanExceptionFile" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="AddToCollectionActivity_11">
                                      <ecaac:AddToCollectionActivity.Collection>
                                        <InOutArgument x:TypeArguments="scg:List(x:String)">
                                          <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">cleanException附件</mca:CSharpReference>
                                        </InOutArgument>
                                      </ecaac:AddToCollectionActivity.Collection>
                                      <ecaac:AddToCollectionActivity.Item>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_345">报表文件字典["山姆水单EX2OFile"]</mca:CSharpValue>
                                        </InArgument>
                                      </ecaac:AddToCollectionActivity.Item>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ecaac:AddToCollectionActivity>
                                  </bfa:If.Then>
                                </bfa:If>
                                <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - clean order 有数据" sap:VirtualizedContainerService.HintSize="449,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_39" IsIgnore="False">
                                  <bfa:InvokeWorkflow.Arguments>
                                    <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件">
                                      <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_346">cleanException附件</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_347">(邮件正文模板有数据.Replace("(订单类型)", "clean + Exception order list")).ToString()</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_348">(邮件标题模板.Replace("(订单类型)", "clean + Exception order list")).ToString()</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349">(cleanExceptionOrderMailReceiver).ToString()</mca:CSharpValue>
                                    </InArgument>
                                  </bfa:InvokeWorkflow.Arguments>
                                  <bfa:InvokeWorkflow.WorkflowPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_151">Module\通知\发送邮件.xaml</Literal>
                                    </InArgument>
                                  </bfa:InvokeWorkflow.WorkflowPath>
                                </bfa:InvokeWorkflow>
                              </Sequence>
                            </bfa:If.Then>
                            <bfa:If.Else>
                              <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - clean order 无数据" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_35" IsIgnore="False">
                                <bfa:InvokeWorkflow.Arguments>
                                  <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件" />
                                  <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">(邮件正文模板无数据.Replace("(订单类型)", "clean + Exception order list")).ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">(邮件标题模板.Replace("(订单类型)", "clean + Exception order list")).ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_326">(cleanExceptionOrderMailReceiver).ToString()</mca:CSharpValue>
                                  </InArgument>
                                </bfa:InvokeWorkflow.Arguments>
                                <bfa:InvokeWorkflow.WorkflowPath>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_146">Module\通知\发送邮件.xaml</Literal>
                                  </InArgument>
                                </bfa:InvokeWorkflow.WorkflowPath>
                              </bfa:InvokeWorkflow>
                            </bfa:If.Else>
                          </bfa:If>
                        </bfa:Retry.Body>
                      </bfa:Retry>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">210,594.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,53</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <bfa:Retry ActivityName="重试" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="重试 - 山姆分仓明细" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="Retry_3" IsIgnore="False">
                            <bfa:Retry.RetryCount>
                              <InArgument x:TypeArguments="x:Int32">
                                <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_142" Value="1" />
                              </InArgument>
                            </bfa:Retry.RetryCount>
                            <bfa:Retry.RetryTimeSpan>
                              <InArgument x:TypeArguments="x:TimeSpan">
                                <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_143" />
                              </InArgument>
                            </bfa:Retry.RetryTimeSpan>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <bfa:Retry.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_144" Value="True" />
                              </InArgument>
                            </bfa:Retry.Condition>
                            <bfa:Retry.Body>
                              <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If 分仓明细表）" sap:VirtualizedContainerService.HintSize="449,353" sap2010:WorkflowViewState.IdRef="If_26" IsIgnore="False">
                                <bfa:If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_320">报表文件字典.ContainsKey("山姆分仓明细表")</mca:CSharpValue>
                                  </InArgument>
                                </bfa:If.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <bfa:If.Then>
                                  <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - 分仓明细有数据" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_36" IsIgnore="False">
                                    <bfa:InvokeWorkflow.Arguments>
                                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件">
                                        <mca:CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">new List&lt;string&gt;{报表文件字典["山姆分仓明细表"]}</mca:CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">(邮件正文模板有数据.Replace("(订单类型)", "分仓明细表")).ToString()</mca:CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_329">(邮件标题模板.Replace("(订单类型)", "分仓明细表")).ToString()</mca:CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">(分仓明细MailReceiver).ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </bfa:InvokeWorkflow.Arguments>
                                    <bfa:InvokeWorkflow.WorkflowPath>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_147">Module\通知\发送邮件.xaml</Literal>
                                      </InArgument>
                                    </bfa:InvokeWorkflow.WorkflowPath>
                                  </bfa:InvokeWorkflow>
                                </bfa:If.Then>
                                <bfa:If.Else>
                                  <bfa:InvokeWorkflow ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="调用子流程: 发送邮件 - exception order无数据" sap:VirtualizedContainerService.HintSize="349,96" sap2010:WorkflowViewState.IdRef="InvokeWorkflow_37" IsIgnore="False">
                                    <bfa:InvokeWorkflow.Arguments>
                                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="附件" />
                                      <InArgument x:TypeArguments="x:String" x:Key="邮件正文">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_350">(邮件正文模板无数据.Replace("(订单类型)", "分仓明细表")).ToString()</mca:CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="邮件主题">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_351">(邮件标题模板.Replace("(订单类型)", "分仓明细表")).ToString()</mca:CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="收件人">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">(分仓明细MailReceiver).ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </bfa:InvokeWorkflow.Arguments>
                                    <bfa:InvokeWorkflow.WorkflowPath>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_148">Module\通知\发送邮件.xaml</Literal>
                                      </InArgument>
                                    </bfa:InvokeWorkflow.WorkflowPath>
                                  </bfa:InvokeWorkflow>
                                </bfa:If.Else>
                              </bfa:If>
                            </bfa:Retry.Body>
                          </bfa:Retry>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
  </Flowchart>
</Activity>