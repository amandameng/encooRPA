<Activity mc:Ignorable="sap sap2010 sads" x:Class="整单异常" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ecaac="clr-namespace:Encoo.CodeTool.Activity.Activities.CSharp;assembly=Encoo.CodeTool.Activity" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="etoConfigDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="exceptionOrder模板数据表" Type="InArgument(sd:DataTable)" />
    <x:Property Name="outExceptionDT" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="源订单数据表" Type="InArgument(sd:DataTable)" />
    <x:Property Name="异常原因" Type="InArgument(x:String)" />
    <x:Property Name="异常详细描述" Type="InArgument(x:String)" />
    <x:Property Name="跳过异常检查" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:整单异常.跳过异常检查>
    <InArgument x:TypeArguments="x:Boolean">
      <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_3" />
    </InArgument>
  </this:整单异常.跳过异常检查>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>411,339</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>整单异常_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="14">
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.Tool</x:String>
      <x:String>System.IO</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.CSharp</x:String>
      <x:String>GlobalVariable</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>System</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>GlobalVariable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="371,259" sap2010:WorkflowViewState.IdRef="Sequence_20">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="跳过后续检查" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" sap2010:Annotation.AnnotationText="传入原始订单join后单行数据&#xA;输出exceotion 模板的一行数据" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码 - 订单检查" sap:VirtualizedContainerService.HintSize="349,135" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_1">
      <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_4">.code\CSharp\执行CSharp代码_订单检查.cs</Literal>
        </InArgument>
      </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ecaac:InvokeCSharpCodeActivity>
  </Sequence>
</Activity>