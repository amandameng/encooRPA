<Activity mc:Ignorable="sap sap2010 sads" x:Class="EncooWorkflow.Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:baasf="clr-namespace:BotTime.ActivityLibrary.Activities.System.File;assembly=BotTime.ActivityLibrary" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:boa="clr-namespace:BotTime.Office.Activity;assembly=BotTime.Office.Activity" xmlns:ecaac="clr-namespace:Encoo.CodeTool.Activity.Activities.CSharp;assembly=Encoo.CodeTool.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="上传文件解压缩路径" Type="InArgument(x:String)" />
    <x:Property Name="validOrdersFromListingDT" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>654,716</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EncooWorkflow.Workflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="11">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.CSharp</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
      
      
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="流程图_Root" sap:VirtualizedContainerService.HintSize="614,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">80,48</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,50.5 310,103.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,103.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="序列 - 校验文件有效性" sap:VirtualizedContainerService.HintSize="672,1881" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="s:String[]" Name="excelFileList" />
          <Variable x:TypeArguments="s:String[]" Name="htmlFileList" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <baasf:GetFileListActivity ActivityName="获取文件/文件夹列表" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取xls文件列表" sap:VirtualizedContainerService.HintSize="650,85" sap2010:WorkflowViewState.IdRef="GetFileListActivity_1" InputType="File" SearchAllDirectories="True">
          <baasf:GetFileListActivity.GetFileListFilter>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_1">*.xls</Literal>
            </InArgument>
          </baasf:GetFileListActivity.GetFileListFilter>
          <baasf:GetFileListActivity.InputPath>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">System.Convert.ToString(上传文件解压缩路径)</mca:CSharpValue>
            </InArgument>
          </baasf:GetFileListActivity.InputPath>
          <baasf:GetFileListActivity.Result>
            <OutArgument x:TypeArguments="s:String[]">
              <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">excelFileList</mca:CSharpReference>
            </OutArgument>
          </baasf:GetFileListActivity.Result>
        </baasf:GetFileListActivity>
        <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If excel文件只能有一个）" sap:VirtualizedContainerService.HintSize="650,53" sap2010:WorkflowViewState.IdRef="If_1" IsIgnore="False">
          <bfa:If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">excelFileList.Count() != 1</mca:CSharpValue>
            </InArgument>
          </bfa:If.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <bfa:If.Then>
            <bfa:Throw DisplayName="抛出异常 - 文件不存在或者大于1" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1">
              <InArgument x:TypeArguments="s:Exception">
                <mca:CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">new Exception("excel文件不存在或者数量大于1！文件需为压缩包且包含一个Excel+多个html文件。")</mca:CSharpValue>
              </InArgument>
            </bfa:Throw>
          </bfa:If.Then>
        </bfa:If>
        <baasf:GetFileListActivity ActivityName="获取文件/文件夹列表" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取html文件列表" sap:VirtualizedContainerService.HintSize="650,85" sap2010:WorkflowViewState.IdRef="GetFileListActivity_2" InputType="File" SearchAllDirectories="True">
          <baasf:GetFileListActivity.GetFileListFilter>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_2">*.htm*</Literal>
            </InArgument>
          </baasf:GetFileListActivity.GetFileListFilter>
          <baasf:GetFileListActivity.InputPath>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">System.Convert.ToString(上传文件解压缩路径)</mca:CSharpValue>
            </InArgument>
          </baasf:GetFileListActivity.InputPath>
          <baasf:GetFileListActivity.Result>
            <OutArgument x:TypeArguments="s:String[]">
              <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">htmlFileList</mca:CSharpReference>
            </OutArgument>
          </baasf:GetFileListActivity.Result>
        </baasf:GetFileListActivity>
        <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If htmlFileList 文件不存在）" sap:VirtualizedContainerService.HintSize="650,53" sap2010:WorkflowViewState.IdRef="If_3" IsIgnore="False">
          <bfa:If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">htmlFileList.Count() == 0</mca:CSharpValue>
            </InArgument>
          </bfa:If.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <bfa:If.Then>
            <bfa:Throw DisplayName="抛出异常 - 文件不存在或者大于1" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2">
              <InArgument x:TypeArguments="s:Exception">
                <mca:CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">new Exception("不存在html订单文件！文件需为压缩包且包含一个Excel+多个html文件。")</mca:CSharpValue>
              </InArgument>
            </bfa:Throw>
          </bfa:If.Then>
        </bfa:If>
        <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 excelFile" EnableMacro="False" sap:VirtualizedContainerService.HintSize="650,1321" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_1" ReadOnly="False" Visible="False" needRestoreKey="False">
          <boa:OfficeExcelOpenOrCreateActivity.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
              </ActivityAction.Argument>
              <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="556,1213" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="lastRowNum" />
                  <Variable x:TypeArguments="x:String" Name="lastColName" />
                  <Variable x:TypeArguments="x:Boolean" Name="validExcelFile">
                    <Variable.Default>
                      <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_5" Value="True" />
                    </Variable.Default>
                  </Variable>
                  <Variable x:TypeArguments="s:String[]" Name="validColumnsArr" />
                  <Variable x:TypeArguments="scg:List(x:String)" Name="allSheetNames" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <boa:OfficeExcelGetAllSheetsActivity ActivityName="获取所有工作表名" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取所有工作表名" sap:VirtualizedContainerService.HintSize="534,80" sap2010:WorkflowViewState.IdRef="OfficeExcelGetAllSheetsActivity_1">
                  <boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                    <OutArgument x:TypeArguments="scg:List(x:String)">
                      <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">allSheetNames</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                </boa:OfficeExcelGetAllSheetsActivity>
                <boa:OfficeExcelGetLastRowIndexActivity ColumnIndex="{x:Null}" LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号 - File Name列" sap:VirtualizedContainerService.HintSize="534,139" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_1">
                  <boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">7</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                  <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">lastRowNum</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                  <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">System.Convert.ToString(allSheetNames[0])</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                </boa:OfficeExcelGetLastRowIndexActivity>
                <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="534,166" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_1">
                  <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">lastColName</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                  <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                    <InArgument x:TypeArguments="x:Int32">
                      <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_3" Value="1" />
                    </InArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                  <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">System.Convert.ToString(allSheetNames[0])</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                </boa:OfficeExcelGetLastColIndexActivity>
                <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域 - validOrdersDT" sap:VirtualizedContainerService.HintSize="534,129" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_1" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                  <boa:OfficeExcelReadRangeActivity.Data>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">validOrdersFromListingDT</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelReadRangeActivity.Data>
                  <boa:OfficeExcelReadRangeActivity.Range>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">System.Convert.ToString("A1:"+lastColName+lastRowNum)</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelReadRangeActivity.Range>
                  <boa:OfficeExcelReadRangeActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">System.Convert.ToString(allSheetNames[0])</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelReadRangeActivity.SheetName>
                </boa:OfficeExcelReadRangeActivity>
                <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码-验证上传excel格式" sap:VirtualizedContainerService.HintSize="534,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_1">
                  <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_4">.code\CSharp\执行CSharp代码 - 验证上传excel格式.cs</Literal>
                    </InArgument>
                  </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                </ecaac:InvokeCSharpCodeActivity>
                <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If validExcelFile 为假）" sap:VirtualizedContainerService.HintSize="534,282" sap2010:WorkflowViewState.IdRef="If_6" IsIgnore="False">
                  <bfa:If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">!validExcelFile</mca:CSharpValue>
                    </InArgument>
                  </bfa:If.Condition>
                  <bfa:If.Then>
                    <bfa:Throw DisplayName="抛出异常 - 列头不合法异常" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3">
                      <InArgument x:TypeArguments="s:Exception">
                        <mca:CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">new Exception("Excel文件不合法, 必须包含以下列：" + string.Join(",", validColumnsArr))</mca:CSharpValue>
                      </InArgument>
                    </bfa:Throw>
                  </bfa:If.Then>
                </bfa:If>
              </Sequence>
            </ActivityAction>
          </boa:OfficeExcelOpenOrCreateActivity.Body>
          <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">System.Convert.ToString(excelFileList[0])</mca:CSharpValue>
            </InArgument>
          </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </boa:OfficeExcelOpenOrCreateActivity>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>