<Activity mc:Ignorable="sap sap2010 sads" x:Class="打开excel文件读取指定全部数据" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:boa="clr-namespace:BotTime.Office.Activity;assembly=BotTime.Office.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="excel_file_path" Type="InArgument(x:String)" />
    <x:Property Name="excelResultDT" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="startRow" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:打开excel文件读取指定全部数据.startRow>
    <InArgument x:TypeArguments="x:Int32">
      <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_18" Value="1" />
    </InArgument>
  </this:打开excel文件读取指定全部数据.startRow>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>596,559</sap:VirtualizedContainerService.HintSize>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="12">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.Tool</x:String>
      <x:String>BotTime.DataBase.Activity</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>System.IO</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>BotTime.DataBase.Activity</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="556,479" sap2010:WorkflowViewState.IdRef="Sequence_16">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If 文件存在）" sap:VirtualizedContainerService.HintSize="534,355" sap2010:WorkflowViewState.IdRef="If_1" IsIgnore="False">
      <bfa:If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">File.Exists(excel_file_path)</mca:CSharpValue>
        </InArgument>
      </bfa:If.Condition>
      <bfa:If.Then>
        <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" sap2010:Annotation.AnnotationText="读取数据，获取数据，拼凑SQL" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 excel 文件" EnableMacro="False" sap:VirtualizedContainerService.HintSize="451,695" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_1" ReadOnly="False" Visible="False" needRestoreKey="False">
          <boa:OfficeExcelOpenOrCreateActivity.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
              </ActivityAction.Argument>
              <Sequence DisplayName="序列-打开eto文件" sap:VirtualizedContainerService.HintSize="371,562" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                  <Variable x:TypeArguments="x:String" Name="lastColName" />
                  <Variable x:TypeArguments="scg:List(x:String)" Name="allSheetNames" />
                  <Variable x:TypeArguments="x:String" Name="targetSheetName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <boa:OfficeExcelGetAllSheetsActivity ActivityName="获取所有工作表名" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取所有工作表名" sap:VirtualizedContainerService.HintSize="349,22" sap2010:WorkflowViewState.IdRef="OfficeExcelGetAllSheetsActivity_1">
                  <boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                    <OutArgument x:TypeArguments="scg:List(x:String)">
                      <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">allSheetNames</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                </boa:OfficeExcelGetAllSheetsActivity>
                <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - targetSheetName" sap:VirtualizedContainerService.HintSize="349,55" sap2010:WorkflowViewState.IdRef="Assign_1" IsIgnore="False">
                  <bfa:Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">targetSheetName</mca:CSharpReference>
                    </OutArgument>
                  </bfa:Assign.To>
                  <bfa:Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">allSheetNames[0]</mca:CSharpValue>
                    </InArgument>
                  </bfa:Assign.Value>
                </bfa:Assign>
                <boa:OfficeExcelGetLastRowIndexActivity LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="349,85" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_1">
                  <boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                    <InArgument x:TypeArguments="x:Int32">
                      <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_16" Value="1" />
                    </InArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                  <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">lastRow</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                  <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">(targetSheetName).ToString()</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                </boa:OfficeExcelGetLastRowIndexActivity>
                <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_1">
                  <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">lastColName</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                  <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                    <InArgument x:TypeArguments="x:Int32">
                      <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_17" Value="1" />
                    </InArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                  <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">(targetSheetName).ToString()</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                </boa:OfficeExcelGetLastColIndexActivity>
                <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取全部数据" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_1" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                  <boa:OfficeExcelReadRangeActivity.Data>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">excelResultDT</mca:CSharpReference>
                    </OutArgument>
                  </boa:OfficeExcelReadRangeActivity.Data>
                  <boa:OfficeExcelReadRangeActivity.Range>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">(String.Format("A{0}:{1}{2}", startRow, lastColName, lastRow)).ToString()</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelReadRangeActivity.Range>
                  <boa:OfficeExcelReadRangeActivity.SheetName>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">(targetSheetName).ToString()</mca:CSharpValue>
                    </InArgument>
                  </boa:OfficeExcelReadRangeActivity.SheetName>
                </boa:OfficeExcelReadRangeActivity>
              </Sequence>
            </ActivityAction>
          </boa:OfficeExcelOpenOrCreateActivity.Body>
          <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">(excel_file_path).ToString()</mca:CSharpValue>
            </InArgument>
          </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </boa:OfficeExcelOpenOrCreateActivity>
      </bfa:If.Then>
    </bfa:If>
  </Sequence>
</Activity>