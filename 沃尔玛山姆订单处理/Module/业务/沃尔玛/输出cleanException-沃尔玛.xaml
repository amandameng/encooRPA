<Activity mc:Ignorable="sap sap2010 sads" x:Class="EncooWorkflow.Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:baasf="clr-namespace:BotTime.ActivityLibrary.Activities.System.File;assembly=BotTime.ActivityLibrary" xmlns:bda="clr-namespace:BotTime.DataBase.Activity;assembly=BotTime.DataBase.Activity" xmlns:bda1="clr-namespace:BotTime.DataTableActivity.Activities;assembly=BotTime.DataTableActivity" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:boa="clr-namespace:BotTime.Office.Activity;assembly=BotTime.Office.Activity" xmlns:eae="clr-namespace:Encootech.ActivityCommon.EncooCommonActivity;assembly=ActivityCommon" xmlns:ecaac="clr-namespace:Encoo.CodeTool.Activity.Activities.CSharp;assembly=Encoo.CodeTool.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="增量订单数据表" Type="InArgument(sd:DataTable)" />
    <x:Property Name="cleanAndExceptionTemplate" Type="InArgument(x:String)" />
    <x:Property Name="clean_order_file_path" Type="InArgument(x:String)" />
    <x:Property Name="etoConfigDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="分仓明细表模板文件" Type="InArgument(x:String)" />
    <x:Property Name="分仓明细表文件" Type="InArgument(x:String)" />
    <x:Property Name="bulkWalferConfigDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="sqlConn" Type="InArgument(x:String)" />
    <x:Property Name="curCustomerName" Type="InArgument(x:String)" />
    <x:Property Name="oneToNNestleProductsDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="WMLocationsList" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="不录单订单列表" Type="InOutArgument(scg:List(x:String))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>654,716</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EncooWorkflow.Workflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="16">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.DataBase.Activity</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.CSharp</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
      <x:String>BotTime.DataTableActivity.Activities</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Encootech.ActivityCommon.EncooCommonActivity</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>BotTime.DataBase.Activity</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
      <AssemblyReference>BotTime.DataTableActivity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>ActivityCommon</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Globalization.Extensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.WebSockets.Client.Managed</AssemblyReference>
      <AssemblyReference>ParallelExtensionsExtras</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Root" sap:VirtualizedContainerService.HintSize="614,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="分仓明细数据表" />
      <Variable x:TypeArguments="sd:DataTable" Name="增量订单关联数据表" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">80,48</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,50.5 310,113.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,371</av:Point>
          <av:Size x:Key="ShapeSize">200,78</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart sap2010:Annotation.AnnotationText="PO 级别的订单异常判断" DisplayName="流程图 - By PO" sap:VirtualizedContainerService.HintSize="614,740" sap2010:WorkflowViewState.IdRef="Flowchart_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">80,48</av:Size>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">310,50.5 310,141</av:PointCollection>
            <x:Double x:Key="Height">679</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Flowchart.StartNode>
          <x:Reference>__ReferenceID3</x:Reference>
        </Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">210,141</av:Point>
              <av:Size x:Key="ShapeSize">200,95</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,236 310,301</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <bda:DatabaseConnectActivity ActivityName="连接数据库" sap2010:Annotation.AnnotationText="获取订单连接数据&#xA;获取散威化产品" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="连接数据库  - 获取增量订单关联信息" sap:VirtualizedContainerService.HintSize="200,95" sap2010:WorkflowViewState.IdRef="DatabaseConnectActivity_2" ProviderName="MySql">
            <bda:DatabaseConnectActivity.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="DataBaseScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="477,496" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="selectSql" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码  - 获取clean Exception Orders相关" sap:VirtualizedContainerService.HintSize="455,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_4">
                    <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_23">.code\CSharp\执行CSharp代码 - 获取cleanExceptionOrders.cs</Literal>
                      </InArgument>
                    </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                  </ecaac:InvokeCSharpCodeActivity>
                  <bda:QueryTableActivity ActivityName="查询语句" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="查询语句 - orders join others" sap:VirtualizedContainerService.HintSize="455,22" sap2010:WorkflowViewState.IdRef="QueryTableActivity_3">
                    <bda:QueryTableActivity.DataTable>
                      <OutArgument x:TypeArguments="sd:DataTable">
                        <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">增量订单关联数据表</mca:CSharpReference>
                      </OutArgument>
                    </bda:QueryTableActivity.DataTable>
                    <bda:QueryTableActivity.ExecuteTimeOut>
                      <InArgument x:TypeArguments="x:TimeSpan">
                        <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_24" Value="00:00:30" />
                      </InArgument>
                    </bda:QueryTableActivity.ExecuteTimeOut>
                    <bda:QueryTableActivity.Sql>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">(selectSql).ToString()</mca:CSharpValue>
                      </InArgument>
                    </bda:QueryTableActivity.Sql>
                  </bda:QueryTableActivity>
                  <eae:CommentActivity DisplayName="注释掉" sap:VirtualizedContainerService.HintSize="455,177" sap2010:WorkflowViewState.IdRef="CommentActivity_1">
                    <bda1:DataTablePreviewActivity ActivityName="预览数据表" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="预览数据表" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="DataTablePreviewActivity_1">
                      <bda1:DataTablePreviewActivity.DataTable>
                        <InArgument x:TypeArguments="sd:DataTable">
                          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">增量订单关联数据表</mca:CSharpValue>
                        </InArgument>
                      </bda1:DataTablePreviewActivity.DataTable>
                    </bda1:DataTablePreviewActivity>
                  </eae:CommentActivity>
                </Sequence>
              </ActivityAction>
            </bda:DatabaseConnectActivity.Body>
            <bda:DatabaseConnectActivity.ConnectionString>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">(sqlConn).ToString()</mca:CSharpValue>
              </InArgument>
            </bda:DatabaseConnectActivity.ConnectionString>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </bda:DatabaseConnectActivity>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">210,301</av:Point>
                  <av:Size x:Key="ShapeSize">200,78</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">310,379 310,431</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" sap2010:Annotation.AnnotationText="读取模板数据表" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 分仓明细表文件" EnableMacro="False" sap:VirtualizedContainerService.HintSize="200,78" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_3" ReadOnly="False" Visible="False" needRestoreKey="False">
                <boa:OfficeExcelOpenOrCreateActivity.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="序列 - by 分仓明细" sap:VirtualizedContainerService.HintSize="371,562" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                        <Variable x:TypeArguments="x:String" Name="lastColName" />
                        <Variable x:TypeArguments="x:String" Name="firstSheet" />
                        <Variable x:TypeArguments="scg:List(x:String)" Name="allSheetNames" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <boa:OfficeExcelGetAllSheetsActivity ActivityName="获取所有工作表名" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取所有工作表名" sap:VirtualizedContainerService.HintSize="349,22" sap2010:WorkflowViewState.IdRef="OfficeExcelGetAllSheetsActivity_1">
                        <boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                          <OutArgument x:TypeArguments="scg:List(x:String)">
                            <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">allSheetNames</mca:CSharpReference>
                          </OutArgument>
                        </boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                      </boa:OfficeExcelGetAllSheetsActivity>
                      <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - firstSheet" sap:VirtualizedContainerService.HintSize="349,55" sap2010:WorkflowViewState.IdRef="Assign_1" IsIgnore="False">
                        <bfa:Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">firstSheet</mca:CSharpReference>
                          </OutArgument>
                        </bfa:Assign.To>
                        <bfa:Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">allSheetNames[0]</mca:CSharpValue>
                          </InArgument>
                        </bfa:Assign.Value>
                      </bfa:Assign>
                      <boa:OfficeExcelGetLastRowIndexActivity LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="349,85" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_3">
                        <boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                          <InArgument x:TypeArguments="x:Int32">
                            <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_16" Value="1" />
                          </InArgument>
                        </boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                        <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">lastRow</mca:CSharpReference>
                          </OutArgument>
                        </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                        <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">firstSheet</mca:CSharpValue>
                          </InArgument>
                        </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                      </boa:OfficeExcelGetLastRowIndexActivity>
                      <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_3">
                        <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">lastColName</mca:CSharpReference>
                          </OutArgument>
                        </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                        <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                          <InArgument x:TypeArguments="x:Int32">
                            <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_17" Value="1" />
                          </InArgument>
                        </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                        <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">firstSheet</mca:CSharpValue>
                          </InArgument>
                        </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                      </boa:OfficeExcelGetLastColIndexActivity>
                      <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取模板文件，获取列头" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_3" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                        <boa:OfficeExcelReadRangeActivity.Data>
                          <OutArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">分仓明细数据表</mca:CSharpReference>
                          </OutArgument>
                        </boa:OfficeExcelReadRangeActivity.Data>
                        <boa:OfficeExcelReadRangeActivity.Range>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">(String.Format("A1:{0}{1}", lastColName, lastRow)).ToString()</mca:CSharpValue>
                          </InArgument>
                        </boa:OfficeExcelReadRangeActivity.Range>
                        <boa:OfficeExcelReadRangeActivity.SheetName>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">firstSheet</mca:CSharpValue>
                          </InArgument>
                        </boa:OfficeExcelReadRangeActivity.SheetName>
                      </boa:OfficeExcelReadRangeActivity>
                    </Sequence>
                  </ActivityAction>
                </boa:OfficeExcelOpenOrCreateActivity.Body>
                <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">(分仓明细表文件).ToString()</mca:CSharpValue>
                  </InArgument>
                </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </boa:OfficeExcelOpenOrCreateActivity>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">210,431</av:Point>
                      <av:Size x:Key="ShapeSize">200,95</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">310,526 310,601</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" sap2010:Annotation.AnnotationText="异常检查逻辑在此！！&#xA;写入异常数据" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 clean exception file" EnableMacro="False" sap:VirtualizedContainerService.HintSize="451,1603" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_2" ReadOnly="False" Visible="False" needRestoreKey="False">
                    <boa:OfficeExcelOpenOrCreateActivity.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="序列-打开 clean exception文件" sap:VirtualizedContainerService.HintSize="393,1453" sap2010:WorkflowViewState.IdRef="Sequence_1">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="byPO模板数据表" />
                            <Variable x:TypeArguments="x:String" Name="byPOSheet">
                              <Variable.Default>
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_11">clean+exception（by PO)</Literal>
                              </Variable.Default>
                            </Variable>
                            <Variable x:TypeArguments="sd:DataTable" Name="exceptionByPODT" />
                            <Variable x:TypeArguments="x:String" Name="byPOOrItemSheet">
                              <Variable.Default>
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_12">exception（by PO or item)</Literal>
                              </Variable.Default>
                            </Variable>
                            <Variable x:TypeArguments="sd:DataTable" Name="byPOorItem模板数据表" />
                            <Variable x:TypeArguments="x:String" Name="checkBulkWaferException" />
                            <Variable x:TypeArguments="x:Decimal" Name="EDLC百分比" />
                            <Variable x:TypeArguments="x:Decimal" Name="RTV百分比" />
                            <Variable x:TypeArguments="x:Decimal" Name="仓租百分比" />
                            <Variable x:TypeArguments="x:Decimal" Name="walmartDiscountRate" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="序列 - by PO template" sap:VirtualizedContainerService.HintSize="371,405" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                              <Variable x:TypeArguments="x:String" Name="lastColName" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <boa:OfficeExcelGetLastRowIndexActivity LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="349,85" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_1">
                              <boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                                <InArgument x:TypeArguments="x:Int32">
                                  <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_6" Value="1" />
                                </InArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                              <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">lastRow</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                              <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">(byPOSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                            </boa:OfficeExcelGetLastRowIndexActivity>
                            <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_1">
                              <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">lastColName</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                              <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                                <InArgument x:TypeArguments="x:Int32">
                                  <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_7" Value="1" />
                                </InArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                              <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">(byPOSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                            </boa:OfficeExcelGetLastColIndexActivity>
                            <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取模板文件，获取列头" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_1" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                              <boa:OfficeExcelReadRangeActivity.Data>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">byPO模板数据表</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelReadRangeActivity.Data>
                              <boa:OfficeExcelReadRangeActivity.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">(String.Format("A1:{0}{1}", lastColName, lastRow)).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelReadRangeActivity.Range>
                              <boa:OfficeExcelReadRangeActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">(byPOSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelReadRangeActivity.SheetName>
                            </boa:OfficeExcelReadRangeActivity>
                          </Sequence>
                          <Sequence DisplayName="序列 -  by PO or Item Template" sap:VirtualizedContainerService.HintSize="371,405" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                              <Variable x:TypeArguments="x:String" Name="lastColName" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <boa:OfficeExcelGetLastRowIndexActivity LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="349,85" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_2">
                              <boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                                <InArgument x:TypeArguments="x:Int32">
                                  <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_13" Value="1" />
                                </InArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.ColumnIndex>
                              <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">lastRow</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                              <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                            </boa:OfficeExcelGetLastRowIndexActivity>
                            <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_2">
                              <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">lastColName</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                              <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                                <InArgument x:TypeArguments="x:Int32">
                                  <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_14" Value="1" />
                                </InArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                              <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                            </boa:OfficeExcelGetLastColIndexActivity>
                            <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取模板文件，获取列头" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_2" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                              <boa:OfficeExcelReadRangeActivity.Data>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">byPOorItem模板数据表</mca:CSharpReference>
                                </OutArgument>
                              </boa:OfficeExcelReadRangeActivity.Data>
                              <boa:OfficeExcelReadRangeActivity.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">(String.Format("A1:{0}{1}", lastColName, lastRow)).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelReadRangeActivity.Range>
                              <boa:OfficeExcelReadRangeActivity.SheetName>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                                </InArgument>
                              </boa:OfficeExcelReadRangeActivity.SheetName>
                            </boa:OfficeExcelReadRangeActivity>
                          </Sequence>
                          <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码 - 异常订单检查-沃尔玛-byPO" sap:VirtualizedContainerService.HintSize="371,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_3">
                            <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_15">.code\CSharp\执行CSharp代码-异常订单检查-沃尔玛-byPO.cs</Literal>
                              </InArgument>
                            </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ecaac:InvokeCSharpCodeActivity>
                          <bda1:DataTableSaveToCSVActivity EncodingStr="{x:Null}" ActivityName="保存为CSV文件" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="保存为CSV文件" sap:VirtualizedContainerService.HintSize="371,56" sap2010:WorkflowViewState.IdRef="DataTableSaveToCSVActivity_1">
                            <bda1:DataTableSaveToCSVActivity.CSVSeparator>
                              <InArgument x:TypeArguments="x:Char">
                                <mca:CSharpValue x:TypeArguments="x:Char" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">','</mca:CSharpValue>
                              </InArgument>
                            </bda1:DataTableSaveToCSVActivity.CSVSeparator>
                            <bda1:DataTableSaveToCSVActivity.DataTable>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">exceptionByPODT</mca:CSharpValue>
                              </InArgument>
                            </bda1:DataTableSaveToCSVActivity.DataTable>
                            <bda1:DataTableSaveToCSVActivity.SavePath>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_18">exceptionByPODT.csv</Literal>
                              </InArgument>
                            </bda1:DataTableSaveToCSVActivity.SavePath>
                          </bda1:DataTableSaveToCSVActivity>
                          <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="False" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域 - 模板数据-不加列头" sap:VirtualizedContainerService.HintSize="371,85" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_1">
                            <boa:OfficeExcelSetRangeActivity.InputDataTable>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">byPO模板数据表</mca:CSharpValue>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.InputDataTable>
                            <boa:OfficeExcelSetRangeActivity.SheetName>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">(byPOSheet).ToString()</mca:CSharpValue>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.SheetName>
                            <boa:OfficeExcelSetRangeActivity.StartCell>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_19">A2</Literal>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.StartCell>
                          </boa:OfficeExcelSetRangeActivity>
                          <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="False" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域 - 模板数据-不加列头" sap:VirtualizedContainerService.HintSize="371,85" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_2">
                            <boa:OfficeExcelSetRangeActivity.InputDataTable>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">byPOorItem模板数据表</mca:CSharpValue>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.InputDataTable>
                            <boa:OfficeExcelSetRangeActivity.SheetName>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.SheetName>
                            <boa:OfficeExcelSetRangeActivity.StartCell>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_20">A2</Literal>
                              </InArgument>
                            </boa:OfficeExcelSetRangeActivity.StartCell>
                          </boa:OfficeExcelSetRangeActivity>
                        </Sequence>
                      </ActivityAction>
                    </boa:OfficeExcelOpenOrCreateActivity.Body>
                    <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">(clean_order_file_path).ToString()</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </boa:OfficeExcelOpenOrCreateActivity>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">210,601</av:Point>
                          <av:Size x:Key="ShapeSize">200,78</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">320,277.38 320,341</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" sap2010:Annotation.AnnotationText="写入数据" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 分仓明细表文件" EnableMacro="False" sap:VirtualizedContainerService.HintSize="200,78" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_4" ReadOnly="False" Visible="False" needRestoreKey="False">
                        <boa:OfficeExcelOpenOrCreateActivity.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="序列 - by 分仓明细" sap:VirtualizedContainerService.HintSize="371,366" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                                <Variable x:TypeArguments="x:String" Name="lastColName" />
                                <Variable x:TypeArguments="x:String" Name="firstSheet" />
                                <Variable x:TypeArguments="scg:List(x:String)" Name="allSheetNames" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <boa:OfficeExcelGetAllSheetsActivity ActivityName="获取所有工作表名" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取所有工作表名" sap:VirtualizedContainerService.HintSize="349,22" sap2010:WorkflowViewState.IdRef="OfficeExcelGetAllSheetsActivity_2">
                                <boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">
                                    <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">allSheetNames</mca:CSharpReference>
                                  </OutArgument>
                                </boa:OfficeExcelGetAllSheetsActivity.SheetNames>
                              </boa:OfficeExcelGetAllSheetsActivity>
                              <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - firstSheet" sap:VirtualizedContainerService.HintSize="349,55" sap2010:WorkflowViewState.IdRef="Assign_2" IsIgnore="False">
                                <bfa:Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">firstSheet</mca:CSharpReference>
                                  </OutArgument>
                                </bfa:Assign.To>
                                <bfa:Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">allSheetNames[0]</mca:CSharpValue>
                                  </InArgument>
                                </bfa:Assign.Value>
                              </bfa:Assign>
                              <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="False" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域 - 添加列头" sap:VirtualizedContainerService.HintSize="349,85" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_3">
                                <boa:OfficeExcelSetRangeActivity.InputDataTable>
                                  <InArgument x:TypeArguments="sd:DataTable">
                                    <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">分仓明细数据表</mca:CSharpValue>
                                  </InArgument>
                                </boa:OfficeExcelSetRangeActivity.InputDataTable>
                                <boa:OfficeExcelSetRangeActivity.SheetName>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">(firstSheet).ToString()</mca:CSharpValue>
                                  </InArgument>
                                </boa:OfficeExcelSetRangeActivity.SheetName>
                                <boa:OfficeExcelSetRangeActivity.StartCell>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_22">A2</Literal>
                                  </InArgument>
                                </boa:OfficeExcelSetRangeActivity.StartCell>
                              </boa:OfficeExcelSetRangeActivity>
                            </Sequence>
                          </ActivityAction>
                        </boa:OfficeExcelOpenOrCreateActivity.Body>
                        <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">(分仓明细表文件).ToString()</mca:CSharpValue>
                          </InArgument>
                        </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </boa:OfficeExcelOpenOrCreateActivity>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
        <x:Reference>__ReferenceID0</x:Reference>
        <x:Reference>__ReferenceID1</x:Reference>
        <x:Reference>__ReferenceID2</x:Reference>
      </Flowchart>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,113.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,166.5 310,233.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <baasf:FileCopyMoveActivity ActionType="Copy" ActivityName="复制/移动文件" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="复制文件-分仓明细表文件" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="FileCopyMoveActivity_2" Overwrite="True">
        <baasf:FileCopyMoveActivity.DestinationPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">(分仓明细表文件).ToString()</mca:CSharpValue>
          </InArgument>
        </baasf:FileCopyMoveActivity.DestinationPath>
        <baasf:FileCopyMoveActivity.OriginPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">(分仓明细表模板文件).ToString()</mca:CSharpValue>
          </InArgument>
        </baasf:FileCopyMoveActivity.OriginPath>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </baasf:FileCopyMoveActivity>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">210,233.5</av:Point>
              <av:Size x:Key="ShapeSize">200,53</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,286.5 310,371</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <baasf:FileCopyMoveActivity ActionType="Copy" ActivityName="复制/移动文件" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="复制文件-clean and exception模板" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="FileCopyMoveActivity_3" Overwrite="True">
            <baasf:FileCopyMoveActivity.DestinationPath>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">(clean_order_file_path).ToString()</mca:CSharpValue>
              </InArgument>
            </baasf:FileCopyMoveActivity.DestinationPath>
            <baasf:FileCopyMoveActivity.OriginPath>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">(cleanAndExceptionTemplate).ToString()</mca:CSharpValue>
              </InArgument>
            </baasf:FileCopyMoveActivity.OriginPath>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </baasf:FileCopyMoveActivity>
          <FlowStep.Next>
            <x:Reference>__ReferenceID4</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>