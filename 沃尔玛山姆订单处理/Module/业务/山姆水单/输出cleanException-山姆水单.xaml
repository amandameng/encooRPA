<Activity mc:Ignorable="sap sap2010 sads" x:Class="EncooWorkflow.Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:baasf="clr-namespace:BotTime.ActivityLibrary.Activities.System.File;assembly=BotTime.ActivityLibrary" xmlns:bda="clr-namespace:BotTime.DataTableActivity.Activities;assembly=BotTime.DataTableActivity" xmlns:bda1="clr-namespace:BotTime.DataBase.Activity;assembly=BotTime.DataBase.Activity" xmlns:bfa="clr-namespace:BotTime.Flow.Activities;assembly=BotTime.Flow.Activities" xmlns:boa="clr-namespace:BotTime.Office.Activity;assembly=BotTime.Office.Activity" xmlns:ecaac="clr-namespace:Encoo.CodeTool.Activity.Activities.CSharp;assembly=Encoo.CodeTool.Activity" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger">
  <x:Members>
    <x:Property Name="增量订单数据表" Type="InArgument(sd:DataTable)" />
    <x:Property Name="cleanAndExceptionTemplate" Type="InArgument(x:String)" />
    <x:Property Name="clean_order_file_path" Type="InArgument(x:String)" />
    <x:Property Name="etoConfigDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="sqlConn" Type="InArgument(x:String)" />
    <x:Property Name="curCustomerName" Type="InArgument(x:String)" />
    <x:Property Name="samWaterDeliverySettingDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="byPOorItem模板数据表" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="不录单订单列表" Type="InOutArgument(scg:List(x:String))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>798,1022</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EncooWorkflow.Workflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="15">
      <x:String>System</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>BotTime.DataBase.Activity</x:String>
      <x:String>Microsoft.CSharp.Activities</x:String>
      <x:String>Encoo.CodeTool.Activity.Activities.CSharp</x:String>
      <x:String>BotTime.ActivityLibrary.Activities.System.File</x:String>
      <x:String>BotTime.Office.Activity</x:String>
      <x:String>BotTime.DataTableActivity.Activities</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>BotTime.Flow.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>BotTime.DataBase.Activity</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Encoo.CodeTool.Activity</AssemblyReference>
      <AssemblyReference>BotTime.ActivityLibrary</AssemblyReference>
      <AssemblyReference>BotTime.Office.Activity</AssemblyReference>
      <AssemblyReference>BotTime.DataTableActivity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>BotTime.Flow.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Root" sap:VirtualizedContainerService.HintSize="758,942" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="分仓明细数据表" />
      <Variable x:TypeArguments="sd:DataTable" Name="增量订单关联数据表" />
      <Variable x:TypeArguments="sd:DataTable" Name="existingEX2ODT" />
      <Variable x:TypeArguments="x:Boolean" Name="存在异常数据" />
      <Variable x:TypeArguments="x:String" Name="selectSql" />
      <Variable x:TypeArguments="x:String" Name="existingEX2OSql" />
      <Variable x:TypeArguments="x:String" Name="orderJobHistorySql" />
      <Variable x:TypeArguments="x:String" Name="noPriceCheckSql" />
      <Variable x:TypeArguments="sd:DataTable" Name="沃尔玛跳过产品检查数据表" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">80,48</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,50.5 310,103.5</av:PointCollection>
        <x:Double x:Key="Height">906.5</x:Double>
        <x:Double x:Key="Width">744.5</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,543.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,596.5 310,655.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <baasf:FileCopyMoveActivity ActionType="Copy" ActivityName="复制/移动文件" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="复制文件-clean and exception模板" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="FileCopyMoveActivity_3" Overwrite="True">
        <baasf:FileCopyMoveActivity.DestinationPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">(clean_order_file_path).ToString()</mca:CSharpValue>
          </InArgument>
        </baasf:FileCopyMoveActivity.DestinationPath>
        <baasf:FileCopyMoveActivity.OriginPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">(cleanAndExceptionTemplate).ToString()</mca:CSharpValue>
          </InArgument>
        </baasf:FileCopyMoveActivity.OriginPath>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </baasf:FileCopyMoveActivity>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">210,655.5</av:Point>
              <av:Size x:Key="ShapeSize">200,129</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,784.5 310,853.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <boa:OfficeExcelOpenOrCreateActivity OfficeVersion="{x:Null}" Password="{x:Null}" SaveAs="{x:Null}" ActivityName="打开/新建" sap2010:Annotation.AnnotationText="异常检查逻辑在此！！&#xA;&#xA;写入异常数据&#xA;" AutoSave="True" ContinueOnError="No" CreateNewFile="False" DelayAfter="0" DelayBefore="0" DisplayName="打开 clean exception file" EnableMacro="False" sap:VirtualizedContainerService.HintSize="650,2515" sap2010:WorkflowViewState.IdRef="OfficeExcelOpenOrCreateActivity_5" ReadOnly="False" Visible="False" needRestoreKey="False">
            <boa:OfficeExcelOpenOrCreateActivity.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="XlWorkbook" />
                </ActivityAction.Argument>
                <Sequence DisplayName="序列-打开eto文件" sap:VirtualizedContainerService.HintSize="556,2331" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="byPO模板数据表" />
                    <Variable x:TypeArguments="x:String" Name="byPOSheet">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_28">clean+exception（by PO)</Literal>
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="sd:DataTable" Name="exceptionByPODT" />
                    <Variable x:TypeArguments="x:String" Name="byPOOrItemSheet">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_29">exception（by PO or item)</Literal>
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="checkBulkWaferException" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="序列 - by PO template" sap:VirtualizedContainerService.HintSize="534,638" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                      <Variable x:TypeArguments="x:String" Name="lastColName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <boa:OfficeExcelGetLastRowIndexActivity ColumnIndex="{x:Null}" LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_4">
                      <boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                        <InArgument x:TypeArguments="x:Int32">
                          <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_34" Value="1" />
                        </InArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                      <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">lastRow</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                      <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">(byPOSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                    </boa:OfficeExcelGetLastRowIndexActivity>
                    <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="334,166" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_4">
                      <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">lastColName</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                      <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                        <InArgument x:TypeArguments="x:Int32">
                          <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_35" Value="1" />
                        </InArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                      <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">(byPOSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                    </boa:OfficeExcelGetLastColIndexActivity>
                    <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取模板文件，获取列头" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_4" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                      <boa:OfficeExcelReadRangeActivity.Data>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">byPO模板数据表</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelReadRangeActivity.Data>
                      <boa:OfficeExcelReadRangeActivity.Range>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">(String.Format("A1:{0}{1}", lastColName, lastRow)).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelReadRangeActivity.Range>
                      <boa:OfficeExcelReadRangeActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">(byPOSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelReadRangeActivity.SheetName>
                    </boa:OfficeExcelReadRangeActivity>
                  </Sequence>
                  <Sequence DisplayName="序列 -  by PO or Item Template" sap:VirtualizedContainerService.HintSize="534,638" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="lastRow" />
                      <Variable x:TypeArguments="x:String" Name="lastColName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <boa:OfficeExcelGetLastRowIndexActivity ColumnIndex="{x:Null}" LettersColumnIndex="{x:Null}" ActivityName="获取末行号" ColumnType="NumberColumn" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末行号" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastRowIndexActivity_5">
                      <boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                        <InArgument x:TypeArguments="x:Int32">
                          <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_36" Value="1" />
                        </InArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.ColumnNo>
                      <boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">lastRow</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.LastRowIndex>
                      <boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelGetLastRowIndexActivity.SheetName>
                    </boa:OfficeExcelGetLastRowIndexActivity>
                    <boa:OfficeExcelGetLastColIndexActivity LastColumnIndex="{x:Null}" ActivityName="获取末列号" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="获取末列号" sap:VirtualizedContainerService.HintSize="334,166" sap2010:WorkflowViewState.IdRef="OfficeExcelGetLastColIndexActivity_5">
                      <boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">lastColName</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.LastColumnLetter>
                      <boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                        <InArgument x:TypeArguments="x:Int32">
                          <Literal x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Literal`1_37" Value="1" />
                        </InArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.RowIndex>
                      <boa:OfficeExcelGetLastColIndexActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelGetLastColIndexActivity.SheetName>
                    </boa:OfficeExcelGetLastColIndexActivity>
                    <boa:OfficeExcelReadRangeActivity ActivityName="读取区域" AddHeaders="True" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="读取区域-读取模板文件，获取列头" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="OfficeExcelReadRangeActivity_5" PreserveFormat="False" RepeatedColumn="False" UseFilter="False">
                      <boa:OfficeExcelReadRangeActivity.Data>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">byPOorItem模板数据表</mca:CSharpReference>
                        </OutArgument>
                      </boa:OfficeExcelReadRangeActivity.Data>
                      <boa:OfficeExcelReadRangeActivity.Range>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">(String.Format("A1:{0}{1}", lastColName, lastRow)).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelReadRangeActivity.Range>
                      <boa:OfficeExcelReadRangeActivity.SheetName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                        </InArgument>
                      </boa:OfficeExcelReadRangeActivity.SheetName>
                    </boa:OfficeExcelReadRangeActivity>
                  </Sequence>
                  <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码 - 异常订单检查-山姆水单-byPO" sap:VirtualizedContainerService.HintSize="534,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_7">
                    <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_30">.code\CSharp\执行CSharp代码-异常订单检查-山姆水单-byPO.cs</Literal>
                      </InArgument>
                    </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
                  </ecaac:InvokeCSharpCodeActivity>
                  <bda:DataTableSaveToCSVActivity EncodingStr="{x:Null}" ActivityName="保存为CSV文件" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="保存为CSV文件" sap:VirtualizedContainerService.HintSize="534,56" sap2010:WorkflowViewState.IdRef="DataTableSaveToCSVActivity_2">
                    <bda:DataTableSaveToCSVActivity.CSVSeparator>
                      <InArgument x:TypeArguments="x:Char">
                        <mca:CSharpValue x:TypeArguments="x:Char" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">','</mca:CSharpValue>
                      </InArgument>
                    </bda:DataTableSaveToCSVActivity.CSVSeparator>
                    <bda:DataTableSaveToCSVActivity.DataTable>
                      <InArgument x:TypeArguments="sd:DataTable">
                        <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">exceptionByPODT</mca:CSharpValue>
                      </InArgument>
                    </bda:DataTableSaveToCSVActivity.DataTable>
                    <bda:DataTableSaveToCSVActivity.SavePath>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_31">exceptionByPODT.csv</Literal>
                      </InArgument>
                    </bda:DataTableSaveToCSVActivity.SavePath>
                  </bda:DataTableSaveToCSVActivity>
                  <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="False" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域 - 模板数据-不加列头" sap:VirtualizedContainerService.HintSize="534,112" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_4">
                    <boa:OfficeExcelSetRangeActivity.InputDataTable>
                      <InArgument x:TypeArguments="sd:DataTable">
                        <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">byPO模板数据表</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.InputDataTable>
                    <boa:OfficeExcelSetRangeActivity.SheetName>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">(byPOSheet).ToString()</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.SheetName>
                    <boa:OfficeExcelSetRangeActivity.StartCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_32">A2</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.StartCell>
                  </boa:OfficeExcelSetRangeActivity>
                  <boa:OfficeExcelSetRangeActivity ActivityName="写入区域" AddHeaders="False" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="写入区域 - 模板数据-不加列头" sap:VirtualizedContainerService.HintSize="534,112" sap2010:WorkflowViewState.IdRef="OfficeExcelSetRangeActivity_5">
                    <boa:OfficeExcelSetRangeActivity.InputDataTable>
                      <InArgument x:TypeArguments="sd:DataTable">
                        <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">byPOorItem模板数据表</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.InputDataTable>
                    <boa:OfficeExcelSetRangeActivity.SheetName>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">(byPOOrItemSheet).ToString()</mca:CSharpValue>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.SheetName>
                    <boa:OfficeExcelSetRangeActivity.StartCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_33">A2</Literal>
                      </InArgument>
                    </boa:OfficeExcelSetRangeActivity.StartCell>
                  </boa:OfficeExcelSetRangeActivity>
                  <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If 模板数据存在）" sap:VirtualizedContainerService.HintSize="534,318" sap2010:WorkflowViewState.IdRef="If_2" IsIgnore="False">
                    <bfa:If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">(byPO模板数据表!=null &amp;&amp; byPO模板数据表.Rows.Count &gt; 0) || (byPOorItem模板数据表!=null &amp;&amp; byPOorItem模板数据表.Rows.Count &gt; 0)</mca:CSharpValue>
                      </InArgument>
                    </bfa:If.Condition>
                    <bfa:If.Then>
                      <bfa:Assign ActivityName="赋值" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="赋值 - 存在异常数据" sap:VirtualizedContainerService.HintSize="323,58" sap2010:WorkflowViewState.IdRef="Assign_1" IsIgnore="False">
                        <bfa:Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">存在异常数据</mca:CSharpReference>
                          </OutArgument>
                        </bfa:Assign.To>
                        <bfa:Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">true</mca:CSharpValue>
                          </InArgument>
                        </bfa:Assign.Value>
                      </bfa:Assign>
                    </bfa:If.Then>
                  </bfa:If>
                </Sequence>
              </ActivityAction>
            </boa:OfficeExcelOpenOrCreateActivity.Body>
            <boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">(clean_order_file_path).ToString()</mca:CSharpValue>
              </InArgument>
            </boa:OfficeExcelOpenOrCreateActivity.ExcelFile>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </boa:OfficeExcelOpenOrCreateActivity>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">210,853.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,53</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">310,766.5 310,813.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <bfa:If ActivityName="条件（If）" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="条件（If 不存在异常数据）" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="If_1" IsIgnore="False">
                <bfa:If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">!存在异常数据</mca:CSharpValue>
                  </InArgument>
                </bfa:If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <bfa:If.Then>
                  <baasf:DeleteActivity ActivityName="删除文件/文件夹" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="删除文件 - 无数据的时候，删除空文件夹" sap:VirtualizedContainerService.HintSize="349,58" sap2010:WorkflowViewState.IdRef="DeleteActivity_1" InputType="File">
                    <baasf:DeleteActivity.InputPath>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">System.Convert.ToString(clean_order_file_path)</mca:CSharpValue>
                      </InArgument>
                    </baasf:DeleteActivity.InputPath>
                  </baasf:DeleteActivity>
                </bfa:If.Then>
              </bfa:If>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,242.5</av:Point>
          <av:Size x:Key="ShapeSize">200,95</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,337.5 310,386.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <bda1:DatabaseConnectActivity ActivityName="连接数据库" sap2010:Annotation.AnnotationText="获取订单连接数据&#xA;获取散威化产品" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="连接数据库  - 获取增量订单关联信息" sap:VirtualizedContainerService.HintSize="449,434" sap2010:WorkflowViewState.IdRef="DatabaseConnectActivity_3" ProviderName="MySql">
        <bda1:DatabaseConnectActivity.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="DataBaseScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="序列" sap:VirtualizedContainerService.HintSize="222,284" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <bda1:QueryTableActivity ActivityName="查询语句" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="查询语句 - orders join others" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="QueryTableActivity_4">
                <bda1:QueryTableActivity.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">增量订单关联数据表</mca:CSharpReference>
                  </OutArgument>
                </bda1:QueryTableActivity.DataTable>
                <bda1:QueryTableActivity.ExecuteTimeOut>
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_27" Value="00:00:30" />
                  </InArgument>
                </bda1:QueryTableActivity.ExecuteTimeOut>
                <bda1:QueryTableActivity.Sql>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">(selectSql).ToString()</mca:CSharpValue>
                  </InArgument>
                </bda1:QueryTableActivity.Sql>
              </bda1:QueryTableActivity>
              <bda1:QueryTableActivity ActivityName="查询语句" sap2010:Annotation.AnnotationText="查询不用价差检查的产品&#xA;select * from walmart_skip_price_check where customer_name='{0}'" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="查询语句 - 不用价差检查的产品" sap:VirtualizedContainerService.HintSize="200,98" sap2010:WorkflowViewState.IdRef="QueryTableActivity_6">
                <bda1:QueryTableActivity.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">沃尔玛跳过产品检查数据表</mca:CSharpReference>
                  </OutArgument>
                </bda1:QueryTableActivity.DataTable>
                <bda1:QueryTableActivity.ExecuteTimeOut>
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <Literal x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="Literal`1_41" Value="00:00:30" />
                  </InArgument>
                </bda1:QueryTableActivity.ExecuteTimeOut>
                <bda1:QueryTableActivity.Sql>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">System.Convert.ToString(noPriceCheckSql)</mca:CSharpValue>
                  </InArgument>
                </bda1:QueryTableActivity.Sql>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </bda1:QueryTableActivity>
            </Sequence>
          </ActivityAction>
        </bda1:DatabaseConnectActivity.Body>
        <bda1:DatabaseConnectActivity.ConnectionString>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">(sqlConn).ToString()</mca:CSharpValue>
          </InArgument>
        </bda1:DatabaseConnectActivity.ConnectionString>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </bda1:DatabaseConnectActivity>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID1" DisplayName="增量订单关联数据表 不为空" sap:VirtualizedContainerService.HintSize="152,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <FlowDecision.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">增量订单关联数据表 != null &amp;&amp; 增量订单关联数据表.Rows.Count &gt; 0</mca:CSharpValue>
          </FlowDecision.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">234,386.5</av:Point>
              <av:Size x:Key="ShapeSize">152,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">234,430 204,430 204,570 210,570</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowDecision.True>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <FlowStep x:Name="__ReferenceID5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">135.5,103.5</av:Point>
          <av:Size x:Key="ShapeSize">349,93</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,196.5 310,242.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ecaac:InvokeCSharpCodeActivity ActivityName="执行C#代码" ContinueOnError="No" DelayAfter="0" DelayBefore="0" DisplayName="执行C#代码 - 获取cleanExceptionOrders-山姆水" sap:VirtualizedContainerService.HintSize="349,93" sap2010:WorkflowViewState.IdRef="InvokeCSharpCodeActivity_9">
        <ecaac:InvokeCSharpCodeActivity.CodeFilePath>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_40">.code\CSharp\执行CSharp代码 - 获取cleanExceptionOrders-山姆水.cs</Literal>
          </InArgument>
        </ecaac:InvokeCSharpCodeActivity.CodeFilePath>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ecaac:InvokeCSharpCodeActivity>
      <FlowStep.Next>
        <x:Reference>__ReferenceID4</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>